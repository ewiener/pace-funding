=begin
#PACE Funding API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0
Contact: 
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module PaceFunding
  class 07PostUnderwritingResultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Post Underwriting Result
    # Post Underwriting Result
    # @param auth_key Auth Key
    # @param project_id Project Id
    # @param fni_status A&#x3D;&gt;Approve,D&#x3D;&gt;Decline,R&#x3D;&gt;Review
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :auth_amount Approved Loan Amount
    # @option opts [String] :fni_transaction_id Transaction Id
    # @option opts [String] :fni_reference_number Reference Number
    # @option opts [Integer] :units Property Units
    # @option opts [String] :square_feet Property Square Feet
    # @option opts [String] :assessed_value Property Assessed Value
    # @option opts [String] :avm Avm
    # @option opts [String] :apn Apn
    # @option opts [String] :legal_description Legal Description
    # @option opts [String] :municipality Municipality
    # @option opts [String] :county County
    # @return [nil]
    def post_fni_result_post(auth_key, project_id, fni_status, opts = {})
      post_fni_result_post_with_http_info(auth_key, project_id, fni_status, opts)
      return nil
    end

    # Post Underwriting Result
    # Post Underwriting Result
    # @param auth_key Auth Key
    # @param project_id Project Id
    # @param fni_status A&#x3D;&gt;Approve,D&#x3D;&gt;Decline,R&#x3D;&gt;Review
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :auth_amount Approved Loan Amount
    # @option opts [String] :fni_transaction_id Transaction Id
    # @option opts [String] :fni_reference_number Reference Number
    # @option opts [Integer] :units Property Units
    # @option opts [String] :square_feet Property Square Feet
    # @option opts [String] :assessed_value Property Assessed Value
    # @option opts [String] :avm Avm
    # @option opts [String] :apn Apn
    # @option opts [String] :legal_description Legal Description
    # @option opts [String] :municipality Municipality
    # @option opts [String] :county County
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def post_fni_result_post_with_http_info(auth_key, project_id, fni_status, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: 07PostUnderwritingResultApi.post_fni_result_post ..."
      end
      # verify the required parameter 'auth_key' is set
      fail ArgumentError, "Missing the required parameter 'auth_key' when calling 07PostUnderwritingResultApi.post_fni_result_post" if auth_key.nil?
      # verify the required parameter 'project_id' is set
      fail ArgumentError, "Missing the required parameter 'project_id' when calling 07PostUnderwritingResultApi.post_fni_result_post" if project_id.nil?
      # verify the required parameter 'fni_status' is set
      fail ArgumentError, "Missing the required parameter 'fni_status' when calling 07PostUnderwritingResultApi.post_fni_result_post" if fni_status.nil?
      # verify enum value
      unless ['A', 'D', 'R'].include?(fni_status)
        fail ArgumentError, "invalid value for 'fni_status', must be one of A, D, R"
      end
      # resource path
      local_var_path = "/post-fni-result".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/xml', 'application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}
      form_params["auth_key"] = auth_key
      form_params["projectId"] = project_id
      form_params["fni_status"] = fni_status
      form_params["auth_amount"] = opts[:'auth_amount'] if !opts[:'auth_amount'].nil?
      form_params["fni_transaction_id"] = opts[:'fni_transaction_id'] if !opts[:'fni_transaction_id'].nil?
      form_params["fni_reference_number"] = opts[:'fni_reference_number'] if !opts[:'fni_reference_number'].nil?
      form_params["units"] = opts[:'units'] if !opts[:'units'].nil?
      form_params["square_feet"] = opts[:'square_feet'] if !opts[:'square_feet'].nil?
      form_params["assessed_value"] = opts[:'assessed_value'] if !opts[:'assessed_value'].nil?
      form_params["avm"] = opts[:'avm'] if !opts[:'avm'].nil?
      form_params["apn"] = opts[:'apn'] if !opts[:'apn'].nil?
      form_params["legal_description"] = opts[:'legal_description'] if !opts[:'legal_description'].nil?
      form_params["municipality"] = opts[:'municipality'] if !opts[:'municipality'].nil?
      form_params["county"] = opts[:'county'] if !opts[:'county'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: 07PostUnderwritingResultApi#post_fni_result_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
