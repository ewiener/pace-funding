=begin
#PACE Funding API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0
Contact: 
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module PaceFunding
  class 02PaymentCalculateApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Calculate Payment
    # Calculate Payment
    # @param auth_key Auth Key
    # @param contractor_code Contractor Code
    # @param salesperson_code Salesperson Code
    # @param project_id Project Id
    # @param project_amount_est Cost Of Project
    # @param term_of_assessment Term Of Assessment 
    # @param completion_date Estimated completion date format MM/DD/YYYY
    # @param tax_credit Is there a 30% tax credit
    # @param tax_rate Marginal tax rate
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :amount_eligible_for_credit Amount eligible for credit
    # @return [nil]
    def getting_calculate_payment_post(auth_key, contractor_code, salesperson_code, project_id, project_amount_est, term_of_assessment, completion_date, tax_credit, tax_rate, opts = {})
      getting_calculate_payment_post_with_http_info(auth_key, contractor_code, salesperson_code, project_id, project_amount_est, term_of_assessment, completion_date, tax_credit, tax_rate, opts)
      return nil
    end

    # Calculate Payment
    # Calculate Payment
    # @param auth_key Auth Key
    # @param contractor_code Contractor Code
    # @param salesperson_code Salesperson Code
    # @param project_id Project Id
    # @param project_amount_est Cost Of Project
    # @param term_of_assessment Term Of Assessment 
    # @param completion_date Estimated completion date format MM/DD/YYYY
    # @param tax_credit Is there a 30% tax credit
    # @param tax_rate Marginal tax rate
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :amount_eligible_for_credit Amount eligible for credit
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def getting_calculate_payment_post_with_http_info(auth_key, contractor_code, salesperson_code, project_id, project_amount_est, term_of_assessment, completion_date, tax_credit, tax_rate, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: 02PaymentCalculateApi.getting_calculate_payment_post ..."
      end
      # verify the required parameter 'auth_key' is set
      fail ArgumentError, "Missing the required parameter 'auth_key' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if auth_key.nil?
      # verify the required parameter 'contractor_code' is set
      fail ArgumentError, "Missing the required parameter 'contractor_code' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if contractor_code.nil?
      # verify the required parameter 'salesperson_code' is set
      fail ArgumentError, "Missing the required parameter 'salesperson_code' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if salesperson_code.nil?
      # verify the required parameter 'project_id' is set
      fail ArgumentError, "Missing the required parameter 'project_id' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if project_id.nil?
      # verify the required parameter 'project_amount_est' is set
      fail ArgumentError, "Missing the required parameter 'project_amount_est' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if project_amount_est.nil?
      # verify the required parameter 'term_of_assessment' is set
      fail ArgumentError, "Missing the required parameter 'term_of_assessment' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if term_of_assessment.nil?
      # verify the required parameter 'completion_date' is set
      fail ArgumentError, "Missing the required parameter 'completion_date' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if completion_date.nil?
      # verify the required parameter 'tax_credit' is set
      fail ArgumentError, "Missing the required parameter 'tax_credit' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if tax_credit.nil?
      # verify the required parameter 'tax_rate' is set
      fail ArgumentError, "Missing the required parameter 'tax_rate' when calling 02PaymentCalculateApi.getting_calculate_payment_post" if tax_rate.nil?
      # resource path
      local_var_path = "/getting-calculate-payment".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/xml', 'application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}
      form_params["auth_key"] = auth_key
      form_params["contractor_code"] = contractor_code
      form_params["salesperson_code"] = salesperson_code
      form_params["projectId"] = project_id
      form_params["project_amount_est"] = project_amount_est
      form_params["term_of_assessment"] = term_of_assessment
      form_params["completion_date"] = completion_date
      form_params["tax_credit"] = tax_credit
      form_params["tax_rate"] = tax_rate
      form_params["amount_eligible_for_credit"] = opts[:'amount_eligible_for_credit'] if !opts[:'amount_eligible_for_credit'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: 02PaymentCalculateApi#getting_calculate_payment_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
